generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int      @id @default(autoincrement())
  full_name        String
  email            String   @unique
  password         String
  gender           String
  cnic_number      String   @unique
  contact_number   String
  state            String
  city             String
  current_address  String
  marital_Status   String
  profile_photo    String?  @db.LongText // Updated to LongText
  cnic_photo_front String?  @db.LongText // Updated to LongText
  cnic_photo_back  String?  @db.LongText // Updated to LongText
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  maidHires MaidHire[]
}

model Maid {
  id                  Int      @id @default(autoincrement())
  full_name           String
  email               String   @unique
  password            String
  gender              String
  cnic_number         String   @unique
  contact_number      String
  state               String
  city                String
  current_address     String
  marital_Status      String
  experience          Float
  skills              Json
  job_type            String
  profile_description String?
  profile_title       String?
  profile_photo       String?  @db.LongText // Updated to LongText
  cnic_photo_front    String?  @db.LongText // Updated to LongText
  cnic_photo_back     String?  @db.LongText // Updated to LongText
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  maidHires MaidHire[]
}

model MaidHire {
  id                  Int      @id @default(autoincrement())
  user_id             Int
  maid_id             Int
  house_size          Float
  no_of_portions      Int
  no_of_peoples       Int
  hired_skills        Json
  preferred_work_time String
  house_photo         String   @db.LongText // Updated to LongText
  acceptance_status   String
  payment_status      String
  total_amount        Float
  user_rating         Int // Rating given by maid to user
  maid_rating         Int // Rating given by user to maid
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])
  maid Maid @relation(fields: [maid_id], references: [id])
}
