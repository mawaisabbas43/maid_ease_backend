// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int      @id @default(autoincrement())
  full_name         String
  email             String   @unique
  password          String
  gender            String
  cnic_number       String   @unique
  contact_number    String
  state             String
  city              String
  current_address   String
  marital_Status    String
  profile_photo     String?  // Store file path
  cnic_photo_front  String?  // Store file path
  cnic_photo_back   String?  // Store file path
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Maid {
  id                Int      @id @default(autoincrement())
  full_name         String
  email             String   @unique
  password          String
  gender            String
  cnic_number       String   @unique
  contact_number    String
  state             String
  city              String
  current_address   String
  marital_Status    String
  experience        Float
  skills            Json
  job_type          String
  profile_photo     String?  // Store file path
  cnic_photo_front  String?  // Store file path
  cnic_photo_back   String?  // Store file path
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model MaidHire {
  id                 Int      @id @default(autoincrement())
  user_id            Int
  maid_id            Int
  house_size         Float
  no_of_portions     Int
  no_of_peoples      Int
  hired_skills       Json
  prefered_work_time String
  house_photo        String   // Base64 image
  acceptance_status  String
  payment_status     String
  total_amount       Float
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}


